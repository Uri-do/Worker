# Docker Compose for MonitoringWorker Observability Stack
# This sets up Prometheus and Grafana for local development

version: '3.8'

services:
  # Prometheus - Metrics collection and storage
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: monitoring-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--storage.tsdb.retention.size=1GB'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--log.level=info'
    networks:
      - monitoring
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Grafana - Visualization and dashboards
  grafana:
    image: grafana/grafana:10.1.0
    container_name: monitoring-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      # Security settings
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_SECURITY_ALLOW_EMBEDDING=true
      
      # Server settings
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      
      # Database settings (using SQLite for simplicity)
      - GF_DATABASE_TYPE=sqlite3
      - GF_DATABASE_PATH=/var/lib/grafana/grafana.db
      
      # Analytics and telemetry
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      
      # Logging
      - GF_LOG_LEVEL=info
      
      # Users and authentication
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      
      # Anonymous access (for development only)
      - GF_AUTH_ANONYMOUS_ENABLED=false
      
      # Plugins
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    networks:
      - monitoring
    depends_on:
      - prometheus
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: AlertManager for handling alerts
  # alertmanager:
  #   image: prom/alertmanager:v0.25.0
  #   container_name: monitoring-alertmanager
  #   restart: unless-stopped
  #   ports:
  #     - "9093:9093"
  #   volumes:
  #     - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
  #     - alertmanager-data:/alertmanager
  #   command:
  #     - '--config.file=/etc/alertmanager/alertmanager.yml'
  #     - '--storage.path=/alertmanager'
  #     - '--web.external-url=http://localhost:9093'
  #     - '--log.level=info'
  #   networks:
  #     - monitoring

# Networks
networks:
  monitoring:
    driver: bridge
    name: monitoring-network

# Volumes for persistent data
volumes:
  prometheus-data:
    driver: local
    name: monitoring-prometheus-data
  grafana-data:
    driver: local
    name: monitoring-grafana-data
  # alertmanager-data:
  #   driver: local
  #   name: monitoring-alertmanager-data
